version: "3"

services:
  #
  # Webserver
  #
  web_identity_provider:
    # image: harpya/web_identity_provider:0.0.20
    build:
      context: ..
      dockerfile: sample-application-ip/.docker/web_identity_provider/dev/Dockerfile
    env_file:
      - ip.env
    ports:
      - "${IP_WEB_EXPOSED_PORT}:80"
    #   - "${WEBSERVER_SSL_EXPOSED_PORT}:443"
    volumes:
      - ../identity-provider/app/:/var/www/html
    networks:
      demo_1_net:

  #
  # Application
  #
  app_identity_provider:
    # image: harpya/app_identity_provider:0.0.20
    build:
      context: ..
      dockerfile: sample-application-ip/.docker/app_identity_provider/dev/Dockerfile
    env_file:
      - ip.env
    working_dir: ${IP_PHP_APP_DIR}
    depends_on:
      - web_identity_provider
      - db_identity_provider
    volumes:
      - ../identity-provider/app/:/var/www/html
      - vol_shared_logs:/srv/logs
    networks:
      demo_1_net:

  #
  # Transactional DB
  #
  db_identity_provider:
    build:
      context: .docker
      dockerfile: db-timescale/Dockerfile
    env_file:
      - ip.env
    volumes:
      - vol_db_identity_provider:/var/lib/postgresql/data
    networks:
      demo_1_net:

  #
  # Web IDE to access db_transactional
  #
  adminer:
    image: adminer
    restart: always
    ports:
      - ${ADMINER_EXPOSED_PORT}:8080
    networks:
      demo_1_net:

  #
  # Web IDE to access db_transactional
  #
  zabbix-agent:
    build:
      dockerfile: Dockerfile
      context: .docker/zabbix-agent/
    # image: zabbix/zabbix-agent
    restart: always
    environment:
      # ZBX_ACTIVESERVERS: 10.1.0.1,10.1.0.8
      # ZBX_ACTIVESERVERS: host.docker.internal
      # ZBX_PASSIVESERVERS: host.docker.internal,10.1.0.1,10.1.0.8
      ZBX_PASSIVESERVERS: 10.1.0.1,10.1.0.8
      ZBX_SERVER_HOST: host.docker.internal
      ZBX_HOSTNAME: zabbix_agent
      # ZBX_PASSIVE_ALLOW: 1
      # ZBX_ACTIVE_ALLOW: 0
    ports:
      - ${ZABBIX_AGENT_PORT}:10050
    volumes:
      - ./conf/zabbix/:/etc/zabbix/
      - vol_shared_logs:/srv/logs
    networks:
      demo_1_net:

  #
  # Webserver
  #
  web:
    build:
      context: .docker/web
      args:
        - WEB_USER=www-data
        - WEB_GROUP=www-data
        - APACHE_ROOT_DIR=/usr/local/apache2
    ports:
      - "${APP_WEB_EXPOSED_PORT}:80"
    #   - "${WEBSERVER_SSL_EXPOSED_PORT}:443"
    env_file:
      - app.env
    volumes:
      - ./app:/var/www/html
      - vol_shared_logs:/srv/logs
    networks:
      demo_1_net:

  #
  # Application
  #
  app:
    build:
      context: .
      dockerfile: .docker/app/Dockerfile
    #   args:
    #     - WEB_USER=www-data
    #     - WEB_GROUP=www-data
    #     - APACHE_ROOT_DIR=/usr/local/apache2
    #     - PHP_ROOT_DIR=/usr/local/etc
    #     - XDEBUG_PORT=${XDEBUG_PORT}
    working_dir: /var/www/html
    depends_on:
      - web
    volumes:
      - ./app:/var/www/html
      # - ./logs:/tmp/logs
      - vol_shared_logs:/srv/logs
    env_file:
      - .env
      - app.env
    networks:
      demo_1_net:

  #
  # Transactional DB
  #
  db:
    build:
      context: .docker
      dockerfile: db-timescale/Dockerfile
    env_file:
      - app.env
    volumes:
      - vol_db_app:/var/lib/postgresql/data
      - vol_shared_logs:/srv/logs
    networks:
      demo_1_net:

  mailer:
    image: schickling/mailcatcher
    ports:
      - "${MAILER_WEB_EXPOSED_PORT}:1080"
      - "${MAILER_SMTP_EXPOSED_PORT}:1025"
    networks:
      demo_1_net:

volumes:
  vol_db_app:
  vol_db_identity_provider:
  vol_shared_logs:

networks:
  demo_1_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_SUBNET}
